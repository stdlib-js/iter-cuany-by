{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils-define-nonenumerable-read-only-property' );\nvar isFunction = require( '@stdlib/assert-is-function' );\nvar isIteratorLike = require( '@stdlib/assert-is-iterator-like' );\nvar iteratorSymbol = require( '@stdlib/symbol-iterator' );\nvar format = require( '@stdlib/string-format' );\n\n\n// MAIN //\n\n/**\n* Returns an iterator which cumulatively tests whether at least one iterated value passes a test implemented by a predicate function.\n*\n* @param {Iterator} iterator - input iterator\n* @param {Function} predicate - predicate function\n* @param {*} [thisArg] - execution context\n* @throws {TypeError} first argument must be an iterator\n* @throws {TypeError} second argument must be a predicate function\n* @returns {Iterator} iterator\n*\n* @example\n* var array2iterator = require( '@stdlib/array-to-iterator' );\n*\n* function isPositive( value ) {\n*     return ( value > 0 );\n* }\n*\n* var arr = array2iterator( [ 0, 0, 0, 1, 0 ] );\n*\n* var it = iterCuAnyBy( arr, isPositive );\n*\n* var v = it.next().value;\n* // returns false\n*\n* v = it.next().value;\n* // returns false\n*\n* v = it.next().value;\n* // returns false\n*\n* v = it.next().value;\n* // returns true\n*\n* v = it.next().value;\n* // returns true\n*\n* var bool = it.next().done;\n* // returns true\n*/\nfunction iterCuAnyBy( iterator, predicate, thisArg ) {\n\tvar value;\n\tvar iter;\n\tvar FLG;\n\tvar i;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an iterator. Value: `%s`.', iterator ) );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tvalue = false;\n\ti = -1;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol && isFunction( iterator[ iteratorSymbol ] ) ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar v;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\tFLG = true;\n\t\t\treturn v;\n\t\t}\n\t\ti += 1;\n\t\tif ( !value && predicate.call( thisArg, v.value, i ) ) {\n\t\t\tvalue = true;\n\t\t}\n\t\treturn {\n\t\t\t'value': value,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterCuAnyBy( iterator[ iteratorSymbol ](), predicate, thisArg );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterCuAnyBy;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which cumulatively tests whether at least one iterated value passes a test implemented by a predicate function.\n*\n* @module @stdlib/iter-cuany-by\n*\n* @example\n* var array2iterator = require( '@stdlib/array-to-iterator' );\n* var iterCuAnyBy = require( '@stdlib/iter-cuany-by' );\n*\n* function isPositive( value ) {\n*     return ( value > 0 );\n* }\n*\n* var arr = array2iterator( [ 0, 0, 0, 1, 0 ] );\n*\n* var it = iterCuNoneBy( arr, isPositive );\n*\n* var v = it.next().value;\n* // returns false\n*\n* v = it.next().value;\n* // returns false\n*\n* v = it.next().value;\n* // returns false\n*\n* v = it.next().value;\n* // returns true\n*\n* v = it.next().value;\n* // returns true\n*\n* var bool = it.next().done;\n* // returns true\n*/\n\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAc,QAAS,uDAAwD,EAC/EC,EAAa,QAAS,4BAA6B,EACnDC,EAAiB,QAAS,iCAAkC,EAC5DC,EAAiB,QAAS,yBAA0B,EACpDC,EAAS,QAAS,uBAAwB,EA4C9C,SAASC,EAAaC,EAAUC,EAAWC,EAAU,CACpD,IAAIC,EACAC,EACAC,EACAC,EACJ,GAAK,CAACV,EAAgBI,CAAS,EAC9B,MAAM,IAAI,UAAWF,EAAQ,qEAAsEE,CAAS,CAAE,EAE/G,GAAK,CAACL,EAAYM,CAAU,EAC3B,MAAM,IAAI,UAAWH,EAAQ,qEAAsEG,CAAU,CAAE,EAEhH,OAAAE,EAAQ,GACRG,EAAI,GAGJF,EAAO,CAAC,EACRV,EAAaU,EAAM,OAAQG,CAAK,EAChCb,EAAaU,EAAM,SAAUI,CAAI,EAG5BX,GAAkBF,EAAYK,EAAUH,CAAe,CAAE,GAC7DH,EAAaU,EAAMP,EAAgBY,CAAQ,EAErCL,EAQP,SAASG,GAAO,CACf,IAAIG,EACJ,OAAKL,EACG,CACN,KAAQ,EACT,GAEDK,EAAIV,EAAS,KAAK,EACbU,EAAE,MACNL,EAAM,GACCK,IAERJ,GAAK,EACA,CAACH,GAASF,EAAU,KAAMC,EAASQ,EAAE,MAAOJ,CAAE,IAClDH,EAAQ,IAEF,CACN,MAASA,EACT,KAAQ,EACT,GACD,CASA,SAASK,EAAKL,EAAQ,CAErB,OADAE,EAAM,GACD,UAAU,OACP,CACN,MAASF,EACT,KAAQ,EACT,EAEM,CACN,KAAQ,EACT,CACD,CAQA,SAASM,GAAU,CAClB,OAAOV,EAAaC,EAAUH,CAAe,EAAE,EAAGI,EAAWC,CAAQ,CACtE,CACD,CAKAT,EAAO,QAAUM,IClGjB,IAAIY,EAAO,IAKX,OAAO,QAAUA",
  "names": ["require_main", "__commonJSMin", "exports", "module", "setReadOnly", "isFunction", "isIteratorLike", "iteratorSymbol", "format", "iterCuAnyBy", "iterator", "predicate", "thisArg", "value", "iter", "FLG", "i", "next", "end", "factory", "v", "main"]
}
