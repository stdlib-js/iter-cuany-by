{"version":3,"file":"index.mjs","sources":["../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property';\nimport isFunction from '@stdlib/assert-is-function';\nimport isIteratorLike from '@stdlib/assert-is-iterator-like';\nimport iteratorSymbol from '@stdlib/symbol-iterator';\nimport format from '@stdlib/error-tools-fmtprodmsg';\n\n\n// MAIN //\n\n/**\n* Returns an iterator which cumulatively tests whether at least one iterated value passes a test implemented by a predicate function.\n*\n* @param {Iterator} iterator - input iterator\n* @param {Function} predicate - predicate function\n* @param {*} [thisArg] - execution context\n* @throws {TypeError} first argument must be an iterator\n* @throws {TypeError} second argument must be a predicate function\n* @returns {Iterator} iterator\n*\n* @example\n* import array2iterator from '@stdlib/array-to-iterator';\n*\n* function isPositive( value ) {\n*     return ( value > 0 );\n* }\n*\n* var arr = array2iterator( [ 0, 0, 0, 1, 0 ] );\n*\n* var it = iterCuAnyBy( arr, isPositive );\n*\n* var v = it.next().value;\n* // returns false\n*\n* v = it.next().value;\n* // returns false\n*\n* v = it.next().value;\n* // returns false\n*\n* v = it.next().value;\n* // returns true\n*\n* v = it.next().value;\n* // returns true\n*\n* var bool = it.next().done;\n* // returns true\n*/\nfunction iterCuAnyBy( iterator, predicate, thisArg ) {\n\tvar value;\n\tvar iter;\n\tvar FLG;\n\tvar i;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'null3v', iterator ) );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'null2H', predicate ) );\n\t}\n\tvalue = false;\n\ti = -1;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol && isFunction( iterator[ iteratorSymbol ] ) ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar v;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\tFLG = true;\n\t\t\treturn v;\n\t\t}\n\t\ti += 1;\n\t\tif ( !value && predicate.call( thisArg, v.value, i ) ) {\n\t\t\tvalue = true;\n\t\t}\n\t\treturn {\n\t\t\t'value': value,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterCuAnyBy( iterator[ iteratorSymbol ](), predicate, thisArg );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default iterCuAnyBy;\n"],"names":["iterCuAnyBy","iterator","predicate","thisArg","value","iter","FLG","i","isIteratorLike","TypeError","format","isFunction","setReadOnly","v","done","next","call","arguments","length","iteratorSymbol"],"mappings":";;kfAsEA,SAASA,EAAaC,EAAUC,EAAWC,GAC1C,IAAIC,EACAC,EACAC,EACAC,EACJ,IAAMC,EAAgBP,GACrB,MAAM,IAAIQ,UAAWC,EAAQ,SAAUT,IAExC,IAAMU,EAAYT,GACjB,MAAM,IAAIO,UAAWC,EAAQ,SAAUR,IAcxC,OAZAE,GAAQ,EACRG,GAAK,EAILK,EADAP,EAAO,CAAA,EACY,QAenB,WACC,IAAIQ,EACJ,GAAKP,EACJ,MAAO,CACNQ,MAAQ,GAIV,IADAD,EAAIZ,EAASc,QACND,KAEN,OADAR,GAAM,EACCO,EAERN,GAAK,GACCH,GAASF,EAAUc,KAAMb,EAASU,EAAET,MAAOG,KAChDH,GAAQ,GAET,MAAO,CACNA,MAASA,EACTU,MAAQ,EAET,IAlCDF,EAAaP,EAAM,UA2CnB,SAAcD,GAEb,GADAE,GAAM,EACDW,UAAUC,OACd,MAAO,CACNd,MAASA,EACTU,MAAQ,GAGV,MAAO,CACNA,MAAQ,EAET,IAnDIK,GAAkBR,EAAYV,EAAUkB,KAC5CP,EAAaP,EAAMc,GA0DpB,WACC,OAAOnB,EAAaC,EAAUkB,KAAoBjB,EAAWC,EAC7D,IA1DME,CA2DR"}